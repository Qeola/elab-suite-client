name: Deploy
on:
  workflow_dispatch:
    inputs:
      render-env:
        description: "Render Cloud Service"
        required: true
        default: "elab-suite-client-staging"
        type: string
      github-env:
        description: "Github Environment"
        required: true
        default: "staging"
        type: string
  workflow_call:
    inputs:
      render-env:
        description: "Render Cloud Service"
        required: true
        default: "elab-suite-client-staging"
        type: string
      github-env:
        description: "Github Environment"
        required: true
        default: "staging"
        type: string
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ inputs.render-env }}-${{ inputs.github-env }}
  cancel-in-progress: true
jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.github-env }}
    steps:
      - name: Avoid deploying to production using a non production env # This is a security measure to avoid deploying to production using a non production environment
        if: inputs.render-env == vars.RENDER_PRODUCTION_ENV && inputs.github-env != 'production'
        run: |
          echo "::error:: Cannot deploy to production using a non production environment"
          exit 1
      - name: Checkout
        uses: actions/checkout@v3 #(to get the code in the repository)
      - name: Setup Node Environment
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "npm" #(cache the deps)
      - name: Install Dependencies
        run: npm ci
      - name: Build App #(build our app)
        run: npm run build
      - uses: actions/cache@v3 #(to cache the pip dependencies)
        with:
          path: ~/.cache/php
          key: ${{ runner.os }}-pip
      - name: Deploy to Render
        uses: JorgeLNJunior/render-deploy@v1.4.4
        with:
          service_id: ${{ secrets.RENDER_SERVICE_ID }}
          api_key: ${{ secrets.RENDER_API_KEY }}
          wait_deploy: true
          github_token: ${{ secrets.GITHUB_TOKEN }}